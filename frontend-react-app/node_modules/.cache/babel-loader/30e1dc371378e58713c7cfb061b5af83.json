{"ast":null,"code":"'use strict';\n\nmodule.exports = Base => class extends Base {\n  warn(code, message) {\n    let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (this.file) data.file = this.file;\n    if (this.cwd) data.cwd = this.cwd;\n    data.code = message instanceof Error && message.code || code;\n    data.tarCode = code;\n\n    if (!this.strict && data.recoverable !== false) {\n      if (message instanceof Error) {\n        data = Object.assign(message, data);\n        message = message.message;\n      }\n\n      this.emit('warn', data.tarCode, message, data);\n    } else if (message instanceof Error) this.emit('error', Object.assign(message, data));else this.emit('error', Object.assign(new Error(`${code}: ${message}`), data));\n  }\n\n};","map":{"version":3,"sources":["C:/Users/ojaswi/Social - Media web app/frontend-react-app/node_modules/tar/lib/warn-mixin.js"],"names":["module","exports","Base","warn","code","message","data","file","cwd","Error","tarCode","strict","recoverable","Object","assign","emit"],"mappings":"AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiBC,IAAI,IAAI,cAAcA,IAAd,CAAmB;AAC1CC,EAAAA,IAAI,CAAEC,IAAF,EAAQC,OAAR,EAA4B;AAAA,QAAXC,IAAW,uEAAJ,EAAI;AAC9B,QAAI,KAAKC,IAAT,EACED,IAAI,CAACC,IAAL,GAAY,KAAKA,IAAjB;AACF,QAAI,KAAKC,GAAT,EACEF,IAAI,CAACE,GAAL,GAAW,KAAKA,GAAhB;AACFF,IAAAA,IAAI,CAACF,IAAL,GAAYC,OAAO,YAAYI,KAAnB,IAA4BJ,OAAO,CAACD,IAApC,IAA4CA,IAAxD;AACAE,IAAAA,IAAI,CAACI,OAAL,GAAeN,IAAf;;AACA,QAAI,CAAC,KAAKO,MAAN,IAAgBL,IAAI,CAACM,WAAL,KAAqB,KAAzC,EAAgD;AAC9C,UAAIP,OAAO,YAAYI,KAAvB,EAA8B;AAC5BH,QAAAA,IAAI,GAAGO,MAAM,CAACC,MAAP,CAAcT,OAAd,EAAuBC,IAAvB,CAAP;AACAD,QAAAA,OAAO,GAAGA,OAAO,CAACA,OAAlB;AACD;;AACD,WAAKU,IAAL,CAAU,MAAV,EAAkBT,IAAI,CAACI,OAAvB,EAAgCL,OAAhC,EAAyCC,IAAzC;AACD,KAND,MAMO,IAAID,OAAO,YAAYI,KAAvB,EACL,KAAKM,IAAL,CAAU,OAAV,EAAmBF,MAAM,CAACC,MAAP,CAAcT,OAAd,EAAuBC,IAAvB,CAAnB,EADK,KAGL,KAAKS,IAAL,CAAU,OAAV,EAAmBF,MAAM,CAACC,MAAP,CAAc,IAAIL,KAAJ,CAAW,GAAEL,IAAK,KAAIC,OAAQ,EAA9B,CAAd,EAAgDC,IAAhD,CAAnB;AACH;;AAlByC,CAA5C","sourcesContent":["'use strict'\nmodule.exports = Base => class extends Base {\n  warn (code, message, data = {}) {\n    if (this.file)\n      data.file = this.file\n    if (this.cwd)\n      data.cwd = this.cwd\n    data.code = message instanceof Error && message.code || code\n    data.tarCode = code\n    if (!this.strict && data.recoverable !== false) {\n      if (message instanceof Error) {\n        data = Object.assign(message, data)\n        message = message.message\n      }\n      this.emit('warn', data.tarCode, message, data)\n    } else if (message instanceof Error)\n      this.emit('error', Object.assign(message, data))\n    else\n      this.emit('error', Object.assign(new Error(`${code}: ${message}`), data))\n  }\n}\n"]},"metadata":{},"sourceType":"script"}