{"ast":null,"code":"'use strict';\n\nconst stripAnsi = require('strip-ansi');\n\nconst isFullwidthCodePoint = require('is-fullwidth-code-point');\n\nconst emojiRegex = require('emoji-regex');\n\nconst stringWidth = string => {\n  if (typeof string !== 'string' || string.length === 0) {\n    return 0;\n  }\n\n  string = stripAnsi(string);\n\n  if (string.length === 0) {\n    return 0;\n  }\n\n  string = string.replace(emojiRegex(), '  ');\n  let width = 0;\n\n  for (let i = 0; i < string.length; i++) {\n    const code = string.codePointAt(i); // Ignore control characters\n\n    if (code <= 0x1F || code >= 0x7F && code <= 0x9F) {\n      continue;\n    } // Ignore combining characters\n\n\n    if (code >= 0x300 && code <= 0x36F) {\n      continue;\n    } // Surrogates\n\n\n    if (code > 0xFFFF) {\n      i++;\n    }\n\n    width += isFullwidthCodePoint(code) ? 2 : 1;\n  }\n\n  return width;\n};\n\nmodule.exports = stringWidth; // TODO: remove this in the next major version\n\nmodule.exports.default = stringWidth;","map":{"version":3,"sources":["C:/Users/ojaswi/Social - Media web app/frontend-react-app/node_modules/string-width/index.js"],"names":["stripAnsi","require","isFullwidthCodePoint","emojiRegex","stringWidth","string","length","replace","width","i","code","codePointAt","module","exports","default"],"mappings":"AAAA;;AACA,MAAMA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,yBAAD,CAApC;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B;;AAEA,MAAMG,WAAW,GAAGC,MAAM,IAAI;AAC7B,MAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACC,MAAP,KAAkB,CAApD,EAAuD;AACtD,WAAO,CAAP;AACA;;AAEDD,EAAAA,MAAM,GAAGL,SAAS,CAACK,MAAD,CAAlB;;AAEA,MAAIA,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;AACxB,WAAO,CAAP;AACA;;AAEDD,EAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAeJ,UAAU,EAAzB,EAA6B,IAA7B,CAAT;AAEA,MAAIK,KAAK,GAAG,CAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACC,MAA3B,EAAmCG,CAAC,EAApC,EAAwC;AACvC,UAAMC,IAAI,GAAGL,MAAM,CAACM,WAAP,CAAmBF,CAAnB,CAAb,CADuC,CAGvC;;AACA,QAAIC,IAAI,IAAI,IAAR,IAAiBA,IAAI,IAAI,IAAR,IAAgBA,IAAI,IAAI,IAA7C,EAAoD;AACnD;AACA,KANsC,CAQvC;;;AACA,QAAIA,IAAI,IAAI,KAAR,IAAiBA,IAAI,IAAI,KAA7B,EAAoC;AACnC;AACA,KAXsC,CAavC;;;AACA,QAAIA,IAAI,GAAG,MAAX,EAAmB;AAClBD,MAAAA,CAAC;AACD;;AAEDD,IAAAA,KAAK,IAAIN,oBAAoB,CAACQ,IAAD,CAApB,GAA6B,CAA7B,GAAiC,CAA1C;AACA;;AAED,SAAOF,KAAP;AACA,CArCD;;AAuCAI,MAAM,CAACC,OAAP,GAAiBT,WAAjB,C,CACA;;AACAQ,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBV,WAAzB","sourcesContent":["'use strict';\nconst stripAnsi = require('strip-ansi');\nconst isFullwidthCodePoint = require('is-fullwidth-code-point');\nconst emojiRegex = require('emoji-regex');\n\nconst stringWidth = string => {\n\tif (typeof string !== 'string' || string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = stripAnsi(string);\n\n\tif (string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = string.replace(emojiRegex(), '  ');\n\n\tlet width = 0;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst code = string.codePointAt(i);\n\n\t\t// Ignore control characters\n\t\tif (code <= 0x1F || (code >= 0x7F && code <= 0x9F)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Ignore combining characters\n\t\tif (code >= 0x300 && code <= 0x36F) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Surrogates\n\t\tif (code > 0xFFFF) {\n\t\t\ti++;\n\t\t}\n\n\t\twidth += isFullwidthCodePoint(code) ? 2 : 1;\n\t}\n\n\treturn width;\n};\n\nmodule.exports = stringWidth;\n// TODO: remove this in the next major version\nmodule.exports.default = stringWidth;\n"]},"metadata":{},"sourceType":"script"}