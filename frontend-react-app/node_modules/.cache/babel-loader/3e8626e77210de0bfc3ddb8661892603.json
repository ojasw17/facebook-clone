{"ast":null,"code":"const AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"Login-Start\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false\n      };\n\n    case \"Login-Success\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"Login-Failure\":\n      return {\n        user: null,\n        isFetching: false,\n        error: action.payload\n      };\n\n    case \"Logout-Start\":\n      localStorage.clear();\n      return {\n        user: null,\n        isFetching: false,\n        error: false\n      };\n\n    case \"FOLLOW\":\n      return { ...state,\n        user: { ...state.user,\n          following: [...state.user.following, action.payload]\n        }\n      };\n\n    case \"UNFOLLOW\":\n      return { ...state,\n        user: { ...state.user,\n          following: state.user.following.filter(followingId => followingId !== action.payload)\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AuthReducer;\nexport default AuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"sources":["C:/Users/ojaswi/Social - Media web app/frontend-react-app/src/context/AuthReducer.js"],"names":["AuthReducer","state","action","type","user","isFetching","error","payload","localStorage","clear","following","filter","followingId"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,aAAL;AACG,aAAQ;AACNC,QAAAA,IAAI,EAAE,IADA;AAENC,QAAAA,UAAU,EAAE,IAFN;AAGNC,QAAAA,KAAK,EAAE;AAHD,OAAR;;AAKH,SAAK,eAAL;AACG,aAAQ;AACLF,QAAAA,IAAI,EAAEF,MAAM,CAACK,OADR;AAELF,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAR;;AAKH,SAAK,eAAL;AACI,aAAQ;AACNF,QAAAA,IAAI,EAAE,IADA;AAENC,QAAAA,UAAU,EAAE,KAFN;AAGNC,QAAAA,KAAK,EAAEJ,MAAM,CAACK;AAHR,OAAR;;AAKJ,SAAK,cAAL;AACIC,MAAAA,YAAY,CAACC,KAAb;AACA,aAAQ;AACNL,QAAAA,IAAI,EAAE,IADA;AAENC,QAAAA,UAAU,EAAE,KAFN;AAGNC,QAAAA,KAAK,EAAE;AAHD,OAAR;;AAKJ,SAAK,QAAL;AACI,aAAQ,EACJ,GAAGL,KADC;AAEJG,QAAAA,IAAI,EAAE,EACH,GAAGH,KAAK,CAACG,IADN;AAEHM,UAAAA,SAAS,EAAE,CAAC,GAAGT,KAAK,CAACG,IAAN,CAAWM,SAAf,EAA0BR,MAAM,CAACK,OAAjC;AAFR;AAFF,OAAR;;AAOJ,SAAK,UAAL;AACI,aAAQ,EACJ,GAAGN,KADC;AAEJG,QAAAA,IAAI,EAAE,EACH,GAAGH,KAAK,CAACG,IADN;AAEHM,UAAAA,SAAS,EAAET,KAAK,CAACG,IAAN,CAAWM,SAAX,CAAqBC,MAArB,CAA4BC,WAAW,IAAIA,WAAW,KAAKV,MAAM,CAACK,OAAlE;AAFR;AAFF,OAAR;;AAOJ;AACG,aAAON,KAAP;AA3CN;AA6CF,CA9CD;;KAAMD,W;AAgDN,eAAeA,WAAf","sourcesContent":["const AuthReducer = (state, action) => {\r\n   switch (action.type) {\r\n      case \"Login-Start\":\r\n         return ({\r\n           user: null,\r\n           isFetching: true,\r\n           error: false  \r\n         })\r\n      case \"Login-Success\":\r\n         return ({\r\n            user: action.payload,\r\n            isFetching: false,\r\n            error: false  \r\n         }) \r\n      case \"Login-Failure\":\r\n          return ({\r\n            user: null,\r\n            isFetching: false,\r\n            error: action.payload \r\n          })  \r\n      case \"Logout-Start\": \r\n          localStorage.clear();\r\n          return ({\r\n            user: null,\r\n            isFetching: false,\r\n            error: false\r\n          })    \r\n      case \"FOLLOW\":\r\n          return ({\r\n              ...state,\r\n              user: {\r\n                 ...state.user,\r\n                 following: [...state.user.following, action.payload]\r\n              }\r\n          })     \r\n      case \"UNFOLLOW\":\r\n          return ({\r\n              ...state,\r\n              user: {\r\n                 ...state.user,\r\n                 following: state.user.following.filter(followingId => followingId !== action.payload)\r\n              }\r\n          })         \r\n      default:\r\n         return state;     \r\n   } \r\n}\r\n\r\nexport default AuthReducer;"]},"metadata":{},"sourceType":"module"}