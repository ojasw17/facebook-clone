{"ast":null,"code":"'use strict';\n\nmodule.exports = exports = rebuild;\nexports.usage = 'Runs \"clean\" and \"build\" at once';\n\nconst napi = require('./util/napi.js');\n\nfunction rebuild(gyp, argv, callback) {\n  const package_json = gyp.package_json;\n  let commands = [{\n    name: 'clean',\n    args: []\n  }, {\n    name: 'build',\n    args: ['rebuild']\n  }];\n  commands = napi.expand_commands(package_json, gyp.opts, commands);\n\n  for (let i = commands.length; i !== 0; i--) {\n    gyp.todo.unshift(commands[i - 1]);\n  }\n\n  process.nextTick(callback);\n}","map":{"version":3,"sources":["C:/Users/ojaswi/Social - Media web app/frontend-react-app/node_modules/@mapbox/node-pre-gyp/lib/rebuild.js"],"names":["module","exports","rebuild","usage","napi","require","gyp","argv","callback","package_json","commands","name","args","expand_commands","opts","i","length","todo","unshift","process","nextTick"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAGC,OAA3B;AAEAD,OAAO,CAACE,KAAR,GAAgB,kCAAhB;;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAAC,gBAAD,CAApB;;AAEA,SAASH,OAAT,CAAiBI,GAAjB,EAAsBC,IAAtB,EAA4BC,QAA5B,EAAsC;AACpC,QAAMC,YAAY,GAAGH,GAAG,CAACG,YAAzB;AACA,MAAIC,QAAQ,GAAG,CACb;AAAEC,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GADa,EAEb;AAAED,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,IAAI,EAAE,CAAC,SAAD;AAAvB,GAFa,CAAf;AAIAF,EAAAA,QAAQ,GAAGN,IAAI,CAACS,eAAL,CAAqBJ,YAArB,EAAmCH,GAAG,CAACQ,IAAvC,EAA6CJ,QAA7C,CAAX;;AACA,OAAK,IAAIK,CAAC,GAAGL,QAAQ,CAACM,MAAtB,EAA8BD,CAAC,KAAK,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1CT,IAAAA,GAAG,CAACW,IAAJ,CAASC,OAAT,CAAiBR,QAAQ,CAACK,CAAC,GAAG,CAAL,CAAzB;AACD;;AACDI,EAAAA,OAAO,CAACC,QAAR,CAAiBZ,QAAjB;AACD","sourcesContent":["'use strict';\n\nmodule.exports = exports = rebuild;\n\nexports.usage = 'Runs \"clean\" and \"build\" at once';\n\nconst napi = require('./util/napi.js');\n\nfunction rebuild(gyp, argv, callback) {\n  const package_json = gyp.package_json;\n  let commands = [\n    { name: 'clean', args: [] },\n    { name: 'build', args: ['rebuild'] }\n  ];\n  commands = napi.expand_commands(package_json, gyp.opts, commands);\n  for (let i = commands.length; i !== 0; i--) {\n    gyp.todo.unshift(commands[i - 1]);\n  }\n  process.nextTick(callback);\n}\n"]},"metadata":{},"sourceType":"script"}