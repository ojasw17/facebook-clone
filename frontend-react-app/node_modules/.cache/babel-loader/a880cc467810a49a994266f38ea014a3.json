{"ast":null,"code":"'use strict';\n\nmodule.exports = exports = rebuild;\nexports.usage = 'Runs \"clean\" and \"install\" at once';\n\nconst napi = require('./util/napi.js');\n\nfunction rebuild(gyp, argv, callback) {\n  const package_json = gyp.package_json;\n  let installArgs = [];\n  const napi_build_version = napi.get_best_napi_build_version(package_json, gyp.opts);\n  if (napi_build_version != null) installArgs = [napi.get_command_arg(napi_build_version)];\n  gyp.todo.unshift({\n    name: 'clean',\n    args: []\n  }, {\n    name: 'install',\n    args: installArgs\n  });\n  process.nextTick(callback);\n}","map":{"version":3,"sources":["C:/Users/ojaswi/Social - Media web app/frontend-react-app/node_modules/@mapbox/node-pre-gyp/lib/reinstall.js"],"names":["module","exports","rebuild","usage","napi","require","gyp","argv","callback","package_json","installArgs","napi_build_version","get_best_napi_build_version","opts","get_command_arg","todo","unshift","name","args","process","nextTick"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAGC,OAA3B;AAEAD,OAAO,CAACE,KAAR,GAAgB,oCAAhB;;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAAC,gBAAD,CAApB;;AAEA,SAASH,OAAT,CAAiBI,GAAjB,EAAsBC,IAAtB,EAA4BC,QAA5B,EAAsC;AACpC,QAAMC,YAAY,GAAGH,GAAG,CAACG,YAAzB;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,QAAMC,kBAAkB,GAAGP,IAAI,CAACQ,2BAAL,CAAiCH,YAAjC,EAA+CH,GAAG,CAACO,IAAnD,CAA3B;AACA,MAAIF,kBAAkB,IAAI,IAA1B,EAAgCD,WAAW,GAAG,CAACN,IAAI,CAACU,eAAL,CAAqBH,kBAArB,CAAD,CAAd;AAChCL,EAAAA,GAAG,CAACS,IAAJ,CAASC,OAAT,CACE;AAAEC,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GADF,EAEE;AAAED,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,IAAI,EAAER;AAAzB,GAFF;AAIAS,EAAAA,OAAO,CAACC,QAAR,CAAiBZ,QAAjB;AACD","sourcesContent":["'use strict';\n\nmodule.exports = exports = rebuild;\n\nexports.usage = 'Runs \"clean\" and \"install\" at once';\n\nconst napi = require('./util/napi.js');\n\nfunction rebuild(gyp, argv, callback) {\n  const package_json = gyp.package_json;\n  let installArgs = [];\n  const napi_build_version = napi.get_best_napi_build_version(package_json, gyp.opts);\n  if (napi_build_version != null) installArgs = [napi.get_command_arg(napi_build_version)];\n  gyp.todo.unshift(\n    { name: 'clean', args: [] },\n    { name: 'install', args: installArgs }\n  );\n  process.nextTick(callback);\n}\n"]},"metadata":{},"sourceType":"script"}