{"ast":null,"code":"const platform = process.env.__TESTING_MKDIRP_PLATFORM__ || process.platform;\n\nconst {\n  resolve,\n  parse\n} = require('path');\n\nconst pathArg = path => {\n  if (/\\0/.test(path)) {\n    // simulate same failure that node raises\n    throw Object.assign(new TypeError('path must be a string without null bytes'), {\n      path,\n      code: 'ERR_INVALID_ARG_VALUE'\n    });\n  }\n\n  path = resolve(path);\n\n  if (platform === 'win32') {\n    const badWinChars = /[*|\"<>?:]/;\n    const {\n      root\n    } = parse(path);\n\n    if (badWinChars.test(path.substr(root.length))) {\n      throw Object.assign(new Error('Illegal characters in path.'), {\n        path,\n        code: 'EINVAL'\n      });\n    }\n  }\n\n  return path;\n};\n\nmodule.exports = pathArg;","map":{"version":3,"sources":["C:/Users/ojaswi/Social - Media web app/frontend-react-app/node_modules/tar/node_modules/mkdirp/lib/path-arg.js"],"names":["platform","process","env","__TESTING_MKDIRP_PLATFORM__","resolve","parse","require","pathArg","path","test","Object","assign","TypeError","code","badWinChars","root","substr","length","Error","module","exports"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,2BAAZ,IAA2CF,OAAO,CAACD,QAApE;;AACA,MAAM;AAAEI,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAqBC,OAAO,CAAC,MAAD,CAAlC;;AACA,MAAMC,OAAO,GAAGC,IAAI,IAAI;AACtB,MAAI,KAAKC,IAAL,CAAUD,IAAV,CAAJ,EAAqB;AACnB;AACA,UAAME,MAAM,CAACC,MAAP,CACJ,IAAIC,SAAJ,CAAc,0CAAd,CADI,EAEJ;AACEJ,MAAAA,IADF;AAEEK,MAAAA,IAAI,EAAE;AAFR,KAFI,CAAN;AAOD;;AAEDL,EAAAA,IAAI,GAAGJ,OAAO,CAACI,IAAD,CAAd;;AACA,MAAIR,QAAQ,KAAK,OAAjB,EAA0B;AACxB,UAAMc,WAAW,GAAG,WAApB;AACA,UAAM;AAACC,MAAAA;AAAD,QAASV,KAAK,CAACG,IAAD,CAApB;;AACA,QAAIM,WAAW,CAACL,IAAZ,CAAiBD,IAAI,CAACQ,MAAL,CAAYD,IAAI,CAACE,MAAjB,CAAjB,CAAJ,EAAgD;AAC9C,YAAMP,MAAM,CAACC,MAAP,CAAc,IAAIO,KAAJ,CAAU,6BAAV,CAAd,EAAwD;AAC5DV,QAAAA,IAD4D;AAE5DK,QAAAA,IAAI,EAAE;AAFsD,OAAxD,CAAN;AAID;AACF;;AAED,SAAOL,IAAP;AACD,CAzBD;;AA0BAW,MAAM,CAACC,OAAP,GAAiBb,OAAjB","sourcesContent":["const platform = process.env.__TESTING_MKDIRP_PLATFORM__ || process.platform\nconst { resolve, parse } = require('path')\nconst pathArg = path => {\n  if (/\\0/.test(path)) {\n    // simulate same failure that node raises\n    throw Object.assign(\n      new TypeError('path must be a string without null bytes'),\n      {\n        path,\n        code: 'ERR_INVALID_ARG_VALUE',\n      }\n    )\n  }\n\n  path = resolve(path)\n  if (platform === 'win32') {\n    const badWinChars = /[*|\"<>?:]/\n    const {root} = parse(path)\n    if (badWinChars.test(path.substr(root.length))) {\n      throw Object.assign(new Error('Illegal characters in path.'), {\n        path,\n        code: 'EINVAL',\n      })\n    }\n  }\n\n  return path\n}\nmodule.exports = pathArg\n"]},"metadata":{},"sourceType":"script"}