{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ojaswi\\\\Social - Media web app\\\\frontend-react-app\\\\src\\\\pages\\\\messenger\\\\Messenger.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport \"./messenger.css\";\nimport Navbar from \"../../react-components/navbar/Navbar.js\";\nimport Conversation from '../../react-components/conversations/Conversation';\nimport Message from '../../react-components/message/Message';\nimport OnlineChat from '../../react-components/onlineChat/OnlineChat';\nimport { AuthContext } from '../../context/AuthContext';\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Messenger() {\n  _s();\n\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setcurrentChat] = useState(null);\n  const [messages, setmessages] = useState([]);\n  const [newMessage, setnewMessage] = useState(\"\");\n  const [arrivalMessage, setarrivalMessage] = useState(null);\n  const socket = useRef();\n  const scrollRef = useRef();\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", data => {\n      setarrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, []);\n  useEffect(() => {\n    var _currentChat$members;\n\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : (_currentChat$members = currentChat.members) === null || _currentChat$members === void 0 ? void 0 : _currentChat$members.includes(arrivalMessage.sender)) && setmessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user === null || user === void 0 ? void 0 : user._id);\n    socket.current.on(\"getUsers\", users => {\n      var _user$followings;\n\n      (_user$followings = user.followings) === null || _user$followings === void 0 ? void 0 : _user$followings.filter(f => users.some(u => u.userId === f));\n    });\n  }, [user]);\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"/conversations/\" + (user === null || user === void 0 ? void 0 : user._id));\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getConversations();\n  }, [user === null || user === void 0 ? void 0 : user._id]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setmessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    var _currentChat$members2;\n\n    e.preventDefault();\n    const message = {\n      sender: user === null || user === void 0 ? void 0 : user._id,\n      text: newMessage,\n      conversationId: currentChat === null || currentChat === void 0 ? void 0 : currentChat._id\n    };\n    const receiverId = currentChat === null || currentChat === void 0 ? void 0 : (_currentChat$members2 = currentChat.members) === null || _currentChat$members2 === void 0 ? void 0 : _currentChat$members2.find(member => member !== user._id);\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage\n    });\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setmessages([...messages, res.data]);\n      setnewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    scrollRef === null || scrollRef === void 0 ? void 0 : (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavour: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search for friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this), conversations.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setcurrentChat(c),\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              conversation: c,\n              currentUser: user\n            }, c._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 22\n            }, this)\n          }, c._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 22\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: messages.map(m => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: scrollRef,\n                  children: /*#__PURE__*/_jsxDEV(Message, {\n                    message: m,\n                    my: m.sender === user._id\n                  }, m._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 26\n                  }, this)\n                }, m._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 26\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write something...\",\n                onChange: e => setnewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Select a conversation to start a chat.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(OnlineChat, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"UhFF0jWmwxQ+NYRQLWPjY4Ih41Y=\");\n\n_c = Messenger;\nexport default Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["C:/Users/ojaswi/Social - Media web app/frontend-react-app/src/pages/messenger/Messenger.js"],"names":["React","useContext","useEffect","useRef","useState","Navbar","Conversation","Message","OnlineChat","AuthContext","axios","io","Messenger","conversations","setConversations","currentChat","setcurrentChat","messages","setmessages","newMessage","setnewMessage","arrivalMessage","setarrivalMessage","socket","scrollRef","user","current","on","data","sender","senderId","text","createdAt","Date","now","members","includes","prev","emit","_id","users","followings","filter","f","some","u","userId","getConversations","res","get","err","console","log","getMessages","handleSubmit","e","preventDefault","message","conversationId","receiverId","find","member","post","scrollIntoView","behavour","map","c","m","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport \"./messenger.css\";\r\nimport Navbar from \"../../react-components/navbar/Navbar.js\";\r\nimport Conversation from '../../react-components/conversations/Conversation';\r\nimport Message from '../../react-components/message/Message';\r\nimport OnlineChat from '../../react-components/onlineChat/OnlineChat';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport axios from \"axios\";\r\nimport {io} from \"socket.io-client\";\r\n\r\nfunction Messenger() {\r\n    \r\n    const [conversations, setConversations] = useState([]);\r\n    const [currentChat, setcurrentChat] = useState(null);\r\n    const [messages, setmessages] = useState([]);\r\n    const [newMessage, setnewMessage] = useState(\"\");\r\n    const [arrivalMessage, setarrivalMessage] = useState(null);\r\n    const socket = useRef();\r\n    const scrollRef = useRef();\r\n\r\n    const {user} = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n       socket.current = io(\"ws://localhost:8900\"); \r\n       socket.current.on(\"getMessage\", data => {\r\n          setarrivalMessage({\r\n             sender: data.senderId,\r\n             text: data.text,\r\n             createdAt: Date.now()\r\n          });  \r\n       });\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n       arrivalMessage && currentChat?.members?.includes(arrivalMessage.sender) &&\r\n       setmessages((prev) => [...prev, arrivalMessage]);\r\n    }, [arrivalMessage, currentChat]);\r\n\r\n    useEffect(() => {\r\n       socket.current.emit(\"addUser\", user?._id);\r\n       socket.current.on(\"getUsers\", users => {\r\n         user.followings?.filter((f) => users.some((u) => u.userId === f)) \r\n       })\r\n    }, [user]);\r\n    \r\n    useEffect(() => {\r\n       const getConversations = async () => {\r\n          try {\r\n            const res = await axios.get(\"/conversations/\" + user?._id);\r\n            setConversations(res.data);\r\n          } catch (err) {\r\n             console.log(err); \r\n          }\r\n       }\r\n        getConversations();\r\n    }, [user?._id]);\r\n\r\n    useEffect (() => {\r\n      const getMessages = async () => {\r\n         try {\r\n           const res = await axios.get(\"/messages/\" + currentChat?._id);\r\n           setmessages(res.data);\r\n         } catch (err) {\r\n            console.log(err); \r\n         }\r\n      }\r\n       getMessages();\r\n    }, [currentChat]); \r\n\r\n    const handleSubmit = async(e) => {\r\n       e.preventDefault();\r\n       const message = {\r\n          sender: user?._id,\r\n          text: newMessage,\r\n          conversationId: currentChat?._id\r\n       };\r\n\r\n       const receiverId = currentChat?.members?.find(\r\n         (member) => member !== user._id\r\n       );\r\n   \r\n       socket.current.emit(\"sendMessage\", {\r\n         senderId: user._id,\r\n         receiverId,\r\n         text: newMessage,\r\n       });\r\n          \r\n       try {\r\n         const res = await axios.post(\"/messages\", message);\r\n         setmessages([...messages, res.data]);\r\n         setnewMessage(\"\");\r\n       } catch (err) {\r\n          console.log(err);\r\n       }\r\n    };\r\n\r\n\r\n    useEffect (() => {\r\n      scrollRef?.current?.scrollIntoView({behavour: \"smooth\"});\r\n    }, [messages]);\r\n\r\n    return (\r\n       <>\r\n        <Navbar/> \r\n        <div className=\"messenger\">\r\n           <div className=\"chatMenu\">\r\n               <div className=\"chatMenuWrapper\">\r\n                  <input placeholder = \"Search for friends\" className=\"chatMenuInput\" />\r\n                  {conversations.map((c) => (\r\n                     <div key = {c._id} onClick = {() => setcurrentChat(c)}> \r\n                     <Conversation key = {c._id} conversation = {c} currentUser = {user}/> \r\n                     </div>\r\n                  ))}\r\n               </div>\r\n           </div>\r\n           <div className=\"chatBox\">\r\n               <div className=\"chatBoxWrapper\">\r\n                  {\r\n                    currentChat ?   \r\n                  <>  \r\n                  <div className=\"chatBoxTop\">\r\n                      {messages.map((m) => {\r\n                        return ( \r\n                         <div key = {m._id} ref = {scrollRef}>\r\n                         <Message key = {m._id} message = {m} my = {m.sender === user._id} />\r\n                         </div> )\r\n                      })}\r\n                  </div>\r\n                  <div className=\"chatBoxBottom\">\r\n                      <textarea \r\n                      className = \"chatMessageInput\" placeholder = \"write something...\"\r\n                       onChange = {(e) => setnewMessage(e.target.value)}\r\n                       value = {newMessage}\r\n                      ></textarea>\r\n                      <button className=\"chatSubmitButton\" onClick = {handleSubmit}>Send</button>\r\n                  </div>\r\n                  </> : <span className = \"noConversationText\">Select a conversation to start a chat.</span>}\r\n               </div>\r\n           </div>\r\n           <div className=\"chatOnline\">\r\n               <div className=\"chatOnlineWrapper\">\r\n                 <OnlineChat/>\r\n               </div>\r\n           </div>\r\n        </div>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Messenger;\r\n"]},"metadata":{},"sourceType":"module"}