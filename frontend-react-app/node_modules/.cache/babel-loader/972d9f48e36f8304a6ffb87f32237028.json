{"ast":null,"code":"'use strict';\n\nmodule.exports = exports = unpublish;\nexports.usage = 'Unpublishes pre-built binary (requires aws-sdk)';\n\nconst log = require('npmlog');\n\nconst versioning = require('./util/versioning.js');\n\nconst napi = require('./util/napi.js');\n\nconst s3_setup = require('./util/s3_setup.js');\n\nconst url = require('url');\n\nfunction unpublish(gyp, argv, callback) {\n  const package_json = gyp.package_json;\n  const napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n  const opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n  const config = {};\n  s3_setup.detect(opts, config);\n  const s3 = s3_setup.get_s3(config);\n  const key_name = url.resolve(config.prefix, opts.package_name);\n  const s3_opts = {\n    Bucket: config.bucket,\n    Key: key_name\n  };\n  s3.headObject(s3_opts, (err, meta) => {\n    if (err && err.code === 'NotFound') {\n      console.log('[' + package_json.name + '] Not found: https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + s3_opts.Key);\n      return callback();\n    } else if (err) {\n      return callback(err);\n    } else {\n      log.info('unpublish', JSON.stringify(meta));\n      s3.deleteObject(s3_opts, (err2, resp) => {\n        if (err2) return callback(err2);\n        log.info(JSON.stringify(resp));\n        console.log('[' + package_json.name + '] Success: removed https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + s3_opts.Key);\n        return callback();\n      });\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/ojaswi/Social - Media web app/frontend-react-app/node_modules/@mapbox/node-pre-gyp/lib/unpublish.js"],"names":["module","exports","unpublish","usage","log","require","versioning","napi","s3_setup","url","gyp","argv","callback","package_json","napi_build_version","get_napi_build_version_from_command_args","opts","evaluate","config","detect","s3","get_s3","key_name","resolve","prefix","package_name","s3_opts","Bucket","bucket","Key","headObject","err","meta","code","console","name","info","JSON","stringify","deleteObject","err2","resp"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAGC,SAA3B;AAEAD,OAAO,CAACE,KAAR,GAAgB,iDAAhB;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,sBAAD,CAA1B;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,gBAAD,CAApB;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,oBAAD,CAAxB;;AACA,MAAMI,GAAG,GAAGJ,OAAO,CAAC,KAAD,CAAnB;;AAEA,SAASH,SAAT,CAAmBQ,GAAnB,EAAwBC,IAAxB,EAA8BC,QAA9B,EAAwC;AACtC,QAAMC,YAAY,GAAGH,GAAG,CAACG,YAAzB;AACA,QAAMC,kBAAkB,GAAGP,IAAI,CAACQ,wCAAL,CAA8CJ,IAA9C,CAA3B;AACA,QAAMK,IAAI,GAAGV,UAAU,CAACW,QAAX,CAAoBJ,YAApB,EAAkCH,GAAG,CAACM,IAAtC,EAA4CF,kBAA5C,CAAb;AACA,QAAMI,MAAM,GAAG,EAAf;AACAV,EAAAA,QAAQ,CAACW,MAAT,CAAgBH,IAAhB,EAAsBE,MAAtB;AACA,QAAME,EAAE,GAAGZ,QAAQ,CAACa,MAAT,CAAgBH,MAAhB,CAAX;AACA,QAAMI,QAAQ,GAAGb,GAAG,CAACc,OAAJ,CAAYL,MAAM,CAACM,MAAnB,EAA2BR,IAAI,CAACS,YAAhC,CAAjB;AACA,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAET,MAAM,CAACU,MADD;AAEdC,IAAAA,GAAG,EAAEP;AAFS,GAAhB;AAIAF,EAAAA,EAAE,CAACU,UAAH,CAAcJ,OAAd,EAAuB,CAACK,GAAD,EAAMC,IAAN,KAAe;AACpC,QAAID,GAAG,IAAIA,GAAG,CAACE,IAAJ,KAAa,UAAxB,EAAoC;AAClCC,MAAAA,OAAO,CAAC9B,GAAR,CAAY,MAAMS,YAAY,CAACsB,IAAnB,GAA0B,uBAA1B,GAAoDT,OAAO,CAACC,MAA5D,GAAqE,oBAArE,GAA4FD,OAAO,CAACG,GAAhH;AACA,aAAOjB,QAAQ,EAAf;AACD,KAHD,MAGO,IAAImB,GAAJ,EAAS;AACd,aAAOnB,QAAQ,CAACmB,GAAD,CAAf;AACD,KAFM,MAEA;AACL3B,MAAAA,GAAG,CAACgC,IAAJ,CAAS,WAAT,EAAsBC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAtB;AACAZ,MAAAA,EAAE,CAACmB,YAAH,CAAgBb,OAAhB,EAAyB,CAACc,IAAD,EAAOC,IAAP,KAAgB;AACvC,YAAID,IAAJ,EAAU,OAAO5B,QAAQ,CAAC4B,IAAD,CAAf;AACVpC,QAAAA,GAAG,CAACgC,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAeG,IAAf,CAAT;AACAP,QAAAA,OAAO,CAAC9B,GAAR,CAAY,MAAMS,YAAY,CAACsB,IAAnB,GAA0B,6BAA1B,GAA0DT,OAAO,CAACC,MAAlE,GAA2E,oBAA3E,GAAkGD,OAAO,CAACG,GAAtH;AACA,eAAOjB,QAAQ,EAAf;AACD,OALD;AAMD;AACF,GAfD;AAgBD","sourcesContent":["'use strict';\n\nmodule.exports = exports = unpublish;\n\nexports.usage = 'Unpublishes pre-built binary (requires aws-sdk)';\n\nconst log = require('npmlog');\nconst versioning = require('./util/versioning.js');\nconst napi = require('./util/napi.js');\nconst s3_setup = require('./util/s3_setup.js');\nconst url = require('url');\n\nfunction unpublish(gyp, argv, callback) {\n  const package_json = gyp.package_json;\n  const napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n  const opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n  const config = {};\n  s3_setup.detect(opts, config);\n  const s3 = s3_setup.get_s3(config);\n  const key_name = url.resolve(config.prefix, opts.package_name);\n  const s3_opts = {\n    Bucket: config.bucket,\n    Key: key_name\n  };\n  s3.headObject(s3_opts, (err, meta) => {\n    if (err && err.code === 'NotFound') {\n      console.log('[' + package_json.name + '] Not found: https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + s3_opts.Key);\n      return callback();\n    } else if (err) {\n      return callback(err);\n    } else {\n      log.info('unpublish', JSON.stringify(meta));\n      s3.deleteObject(s3_opts, (err2, resp) => {\n        if (err2) return callback(err2);\n        log.info(JSON.stringify(resp));\n        console.log('[' + package_json.name + '] Success: removed https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + s3_opts.Key);\n        return callback();\n      });\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}